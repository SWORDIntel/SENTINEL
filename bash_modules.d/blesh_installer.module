#!/usr/bin/env bash
# SENTINEL BLE.sh Installer & Loader Module
# Securely installs, updates, and loads BLE.sh for SENTINEL autocomplete

set -euo pipefail

SENTINEL_LOG_DIR="${HOME}/.sentinel/logs"
mkdir -p "$SENTINEL_LOG_DIR"

_ble_log() {
    local level="$1"; shift
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $level: $*" >> "$SENTINEL_LOG_DIR/blesh-$(date +%Y%m%d).log"
}

_ble_info()    { _ble_log "INFO"    "$@"; }
_ble_warning() { _ble_log "WARNING" "$@"; }
_ble_error()   { _ble_log "ERROR"   "$@"; }

BLSH_REPO="https://github.com/akinomyoga/ble.sh.git"
BLSH_DIR="${HOME}/.local/share/blesh"
BLSH_SCRIPT="${BLSH_DIR}/ble.sh"
BLSH_BIN="${HOME}/.local/bin/blesh"

_ble_install() {
    if [[ -d "$BLSH_DIR/.git" ]]; then
        _ble_info "BLE.sh already cloned, pulling latest changes"
        git -C "$BLSH_DIR" pull --ff-only || { _ble_error "Failed to update BLE.sh"; return 1; }
    else
        _ble_info "Cloning BLE.sh from $BLSH_REPO"
        git clone --depth=1 "$BLSH_REPO" "$BLSH_DIR" || { _ble_error "Failed to clone BLE.sh"; return 1; }
    fi

    if [[ -f "$BLSH_DIR/install.sh" ]]; then
        _ble_info "Running BLE.sh install script"
        bash "$BLSH_DIR/install.sh" --bindir "${HOME}/.local/bin" || { _ble_error "BLE.sh install.sh failed"; return 1; }
    else
        _ble_error "BLE.sh install.sh not found"
        return 1
    fi

    _ble_info "BLE.sh installed successfully"
}

_ble_load() {
    if [[ -f "$BLSH_SCRIPT" ]]; then
        # Prevent double-loading
        if [[ -z "${_BLSH_LOADED:-}" ]]; then
            source "$BLSH_SCRIPT"
            export _BLSH_LOADED=1
            _ble_info "BLE.sh loaded"
        fi
    else
        _ble_error "BLE.sh script not found at $BLSH_SCRIPT"
        return 1
    fi
}

ble_sh_status() {
    if type -t bleopt &>/dev/null; then
        echo "BLE.sh       : LOADED (v$(bleopt --version 2>/dev/null || echo 'unknown'))"
    else
        echo "BLE.sh       : NOT loaded"
    fi
}

ble_sh_install() {
    _ble_install && _ble_load
}

# Main logic: install and load BLE.sh if not already loaded
if ! type -t bleopt &>/dev/null; then
    ble_sh_install
else
    _ble_info "BLE.sh already loaded"
fi

# Export for use in other modules
export -f ble_sh_status
export -f ble_sh_install

# Guard variable to prevent double-loading
export _BLSH_INSTALLER_LOADED=1