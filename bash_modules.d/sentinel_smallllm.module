#!/usr/bin/env bash
### SENTINEL Small LLM Module
### =================================================
### Provides commands for using small language models 
### for text generation and assistance.
###
### Author: SENTINEL Intel Team
### Version: 1.0.0
### Tags: llm, ai, small-models
### Requirements: python3, pip
### ================================================= 

# Check if module is enabled via environment variable with robust error handling
# and silent status check that doesn't print messages
if [[ "${SENTINEL_SMALLLLM_ENABLED:-0}" != "1" ]]; then
    # Module is disabled but won't echo about it
    # This line would return, preventing the module from loading
    # when the environment variable is not set
    return 0 2>/dev/null || true
fi

# Continue with the rest of the file, starting after the original check

# Set environment variables and defaults
export SENTINEL_SMALLLLM_DIR="${SENTINEL_BASE_DIR:-$HOME/Documents/GitHub/SENTINEL}/gitstar/models"
export SENTINEL_SMALLLLM_ENABLED="${SENTINEL_SMALLLLM_ENABLED:-1}"
export SENTINEL_SMALLLLM_DEFAULT_MODEL="${SENTINEL_SMALLLLM_DEFAULT_MODEL:-qwen25-05b}"

# Core functionality
_sentinel_smallllm_ensure_dependencies() {
    # Check and install Python dependencies if needed
    local py_cmd
    if command -v python3 >/dev/null 2>&1; then
        py_cmd="python3"
    elif command -v python >/dev/null 2>&1; then
        py_cmd="python"
    else
        echo "Python is not installed. Please install Python 3.6 or higher."
        return 1
    fi
    
    # Create models directory if it doesn't exist
    mkdir -p "${SENTINEL_SMALLLLM_DIR}"
    
    return 0
}

# Download models command
sentinel_smallllm_download() {
    if [[ "${SENTINEL_SMALLLLM_ENABLED}" != "1" ]]; then
        echo "SENTINEL Small LLM module is disabled. Enable it by setting SENTINEL_SMALLLLM_ENABLED=1."
        return 1
    fi
    
    _sentinel_smallllm_ensure_dependencies || return 1
    
    # Pass arguments to the download script
    python3 "${SENTINEL_BASE_DIR:-$HOME/Documents/GitHub/SENTINEL}/gitstar/download_models.py" "$@"
}

# List available models
sentinel_smallllm_list() {
    if [[ "${SENTINEL_SMALLLLM_ENABLED}" != "1" ]]; then
        echo "SENTINEL Small LLM module is disabled. Enable it by setting SENTINEL_SMALLLLM_ENABLED=1."
        return 1
    fi
    
    python3 "${SENTINEL_BASE_DIR:-$HOME/Documents/GitHub/SENTINEL}/gitstar/models_manager.py" --list
}

# Generate text with a model
sentinel_smallllm_generate() {
    if [[ "${SENTINEL_SMALLLLM_ENABLED}" != "1" ]]; then
        echo "SENTINEL Small LLM module is disabled. Enable it by setting SENTINEL_SMALLLLM_ENABLED=1."
        return 1
    fi
    
    local model prompt
    
    # Check if first argument exists and doesn't start with a quote (likely a model name)
    if [[ $# -ge 2 && ! "$1" =~ ^[\"\'] ]]; then
        model="$1"
        prompt="$2"
    else
        model="${SENTINEL_SMALLLLM_DEFAULT_MODEL}"
        prompt="$1"
    fi
    
    if [[ -z "${prompt}" ]]; then
        echo "Usage: sentinel_smallllm_generate [model] \"prompt\""
        echo "Example: sentinel_smallllm_generate phi3-mini \"What is cybersecurity?\""
        echo "Default model: ${SENTINEL_SMALLLLM_DEFAULT_MODEL}"
        return 1
    fi
    
    python3 "${SENTINEL_BASE_DIR:-$HOME/Documents/GitHub/SENTINEL}/gitstar/models_manager.py" --run-model "${model}" --prompt "${prompt}"
}

# Check model availability
sentinel_smallllm_status() {
    if [[ "${SENTINEL_SMALLLLM_ENABLED}" != "1" ]]; then
        echo "SENTINEL Small LLM module is disabled. Enable it by setting SENTINEL_SMALLLLM_ENABLED=1."
        return 1
    fi
    
    local model_dir="${SENTINEL_SMALLLLM_DIR}"
    
    echo "SENTINEL Small LLM Status:"
    echo "=============================="
    echo "Module enabled: ${SENTINEL_SMALLLLM_ENABLED}"
    echo "Default model: ${SENTINEL_SMALLLLM_DEFAULT_MODEL}"
    echo "Models directory: ${model_dir}"
    echo ""
    echo "Available models:"
    
    if [[ -d "${model_dir}" ]]; then
        for model in "${model_dir}"/*.gguf; do
            if [[ -f "${model}" ]]; then
                local size=$(du -h "${model}" | cut -f1)
                local filename=$(basename "${model}")
                echo "  - ${filename} (${size})"
            fi
        done
    else
        echo "  No models found."
    fi
    
    echo ""
    echo "Use 'smallllm-download --list' to see available models for download."
}

# Usage function
sentinel_smallllm_help() {
    cat << EOF
SENTINEL Small LLM Module Help
==============================

Commands:
  sentinel_smallllm_download [options]   Download small language models
    Options:
      --model NAME                       Download a specific model
      --all                              Download all available models
      --list                             List available models for download

  sentinel_smallllm_list                 List locally available models
  
  sentinel_smallllm_generate [model] "prompt"  Generate text using a model
    If model is omitted, uses default model (${SENTINEL_SMALLLLM_DEFAULT_MODEL})
    
  sentinel_smallllm_status               Show status of Small LLM module
    
  sentinel_smallllm_help                 Show this help message

Environment Variables:
  SENTINEL_SMALLLLM_ENABLED              Set to 1 to enable (default: 1)
  SENTINEL_SMALLLLM_DEFAULT_MODEL        Default model for generation
  SENTINEL_SMALLLLM_DIR                  Directory for models

Examples:
  sentinel_smallllm_download --list
  sentinel_smallllm_download --model qwen25-05b
  sentinel_smallllm_generate "Write a short poem about cybersecurity"
  sentinel_smallllm_generate phi2-q2k "Explain how firewalls work"
EOF
}

# Aliases
alias smallllm-download='sentinel_smallllm_download'
alias smallllm-list='sentinel_smallllm_list'
alias smallllm-generate='sentinel_smallllm_generate'
alias smallllm-status='sentinel_smallllm_status'
alias smallllm-help='sentinel_smallllm_help'
alias smallllm='smallllm-help'

# Add to SENTINEL_FEATURE_MODULES for tracking
if [[ -z "${SENTINEL_FEATURE_MODULES}" ]]; then
    export SENTINEL_FEATURE_MODULES="smallllm"
else
    export SENTINEL_FEATURE_MODULES="${SENTINEL_FEATURE_MODULES}:smallllm"
fi

# Check if we need to download the default model
if [[ "${SENTINEL_SMALLLLM_ENABLED}" == "1" ]]; then
    if [[ ! -f "${SENTINEL_SMALLLLM_DIR}/qwen2.5-0.5b-instruct-q4_0.gguf" && "${SENTINEL_SMALLLLM_DEFAULT_MODEL}" == "qwen25-05b" ]]; then
        echo "Default model (qwen25-05b) not found. You can download it with:"
        echo "  smallllm-download --model qwen25-05b"
    fi
fi

# Module loaded silently Type 'smallllm-help' for usage information." 