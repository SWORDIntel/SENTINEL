#!/usr/bin/env bash
 
# Prevent multiple loading
[[ -n "${_SENTINEL_FZF_LOADED}" ]] && return 0
export _SENTINEL_FZF_LOADED=1

# Check if module is enabled via environment variable with robust error handling
# and silent status check that doesn't print messages
if [[ "${SENTINEL_FZF_ENABLED:-0}" != "1" ]]; then
    # Module is disabled but won't echo about it
    # This line would return, preventing the module from loading
    # when the environment variable is not set
    return 0 2>/dev/null || true
fi

# Continue with the rest of the file, starting after the original check

# --- Security: Ensure only user can read/modify this file ---
{ chmod 600 "${BASH_SOURCE[0]}"; } 2>/dev/null || true

# --- Check for fzf with safe error handling ---
if ! command -v fzf &>/dev/null; then
    { echo "${YELLOW}Warning: fzf not found. FZF integration disabled.${NC}"; } 2>/dev/null || true
    return 0  # Return success even when fzf is missing to prevent terminal crashes
fi

# --- Check for BLE.sh (being phased out) ---
# BLE.sh is being removed from SENTINEL, so we'll skip the check and warning
# to avoid confusion during the transition period.
{
    # Only check for BLE.sh if verbose mode is enabled
    if [[ "${SENTINEL_VERBOSE:-0}" == "1" ]]; then
        BLESH_MAIN="${HOME}/.local/share/blesh/ble.sh"
        if ! type -t bleopt &>/dev/null && [[ -f "$BLESH_MAIN" ]]; then
            # Fix for 'unrecognized attach method' error with robust protection
            { export BLESH_ATTACH_METHOD="attach"; } 2>/dev/null || true
            
            # Try multiple sourcing methods with full error protection
            {
                # First try with source and parameters
                { source "$BLESH_MAIN" --attach=attach; } 2>/dev/null || {
                    # If that fails, try dot operator
                    { . "$BLESH_MAIN"; } 2>/dev/null || {
                        # If all sourcing fails, log but continue silently
                        { echo "${YELLOW}[fzf] Note: BLE.sh loading skipped (being phased out)${NC}" >&2; } 2>/dev/null || true
                    }
                }
            } 2>/dev/null || true
        fi
    fi
    
    # Skip the warning about BLE.sh not being loaded since it's being removed
    # This prevents confusing warnings during normal operation
} 2>/dev/null || true

# --- FZF Integration Scripts (BLE.sh dependent - being phased out) ---
# Since BLE.sh is being removed, we'll skip trying to load its FZF integration
# scripts to avoid warnings and errors.
{
    # Only attempt BLE.sh FZF integration if BLE.sh is actually loaded and verbose mode
    if type -t bleopt &>/dev/null && [[ "${SENTINEL_VERBOSE:-0}" == "1" ]]; then
        FZF_INIT=~/.local/share/blesh/contrib/integration/fzf-initialize.bash
        if [[ -f "$FZF_INIT" ]]; then
            # Source with comprehensive error handling
            { source "$FZF_INIT"; } 2>/dev/null || {
                # Try alternative sourcing if the first fails
                { . "$FZF_INIT"; } 2>/dev/null || true
            }
            
            # Only show success message if verbose mode is enabled
            { echo "${GREEN}FZF integration loaded via BLE.sh${NC}"; } 2>/dev/null || true
        fi
    fi
    # No warnings about missing BLE.sh integration since it's being removed
} 2>/dev/null || true

# --- Environment Customization with error protection ---
{
    export FZF_DEFAULT_COMMAND='fd --type f || find . -type f' 2>/dev/null || true
    export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border' 2>/dev/null || true
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND" 2>/dev/null || true
} 2>/dev/null || true

# --- Logging (only if logger is available) ---
{
    if command -v logger &>/dev/null; then
        # Get version info safely
        local fzf_version="$(fzf --version 2>/dev/null || echo 'unknown')"
        
        # Log only if logger command exists
        { logger -t SENTINEL "[INFO] FZF module loaded (version: $fzf_version)"; } 2>/dev/null || true
    fi
} 2>/dev/null || true

# --- Security Note ---
# Ensure this module and all integration scripts are not world-writable.

# --- End of fzf.module --- 