#!/usr/bin/env bash
### BEGIN MODULE INFO
# Name:                  sentinel_gitstar
# Short-Description:     GitHub Star Analyzer Module
# Description:           Downloads and analyzes READMEs from starred GitHub repositories
#                        to provide search and insights about previously starred repos.
# Author:                John
# URL:                   https://github.com/SWORDIntel/SENTINEL/
# Version:               1.0.0
# Stability:             stable
# Tags:                  github, analysis, ml, repo-management
# Provides:              github_star_analyzer
# Requires:              python3, requests, beautifulsoup4, tqdm, numpy, scipy, sklearn
# Conflicts:             none
### END MODULE INFO

# Check if module is enabled in bashrc.postcustom
if [[ "${SENTINEL_GITSTAR_ENABLED:-0}" != "1" ]]; then
    # Silently check if module is disabled
    # No need to show this message as it's documented elsewhere
    # End of silent check
    return 0
fi

# Check dependencies
if command -v python3 &>/dev/null; then
    # Check for required Python packages
    if python3 -c "import requests, beautifulsoup4, tqdm, numpy, scipy, sklearn" &>/dev/null; then
        # Module is already enabled via bashrc.postcustom
        true
    else
        echo "Warning: Missing Python packages for SENTINEL GitStar."
        echo "Install with: pip install requests beautifulsoup4 tqdm numpy scipy scikit-learn"
        return 0
    fi
else
    echo "Warning: python3 not found. SENTINEL GitStar capabilities disabled."
    return 0
fi

# Check for LLM availability (reuse from sentinel_ml)
SENTINEL_LLM_AVAILABLE=0
if python3 -c "import llama_cpp" &>/dev/null; then
    SENTINEL_LLM_AVAILABLE=1
    echo "LLM capabilities available for GitStar."
else
    echo "Warning: llama-cpp-python not installed. Install for advanced analysis."
    echo "Install with: pip install llama-cpp-python"
fi

# Path to GitStar scripts
SENTINEL_GITSTAR_DIR="$(dirname "$(dirname "${BASH_SOURCE[0]}")")/contrib"
# New storage location for README files in project root
gitstar_root_dir="$(dirname "$(dirname "${BASH_SOURCE[0]}")")/gitstar"
GITSTAR_DATA_DIR="$gitstar_root_dir"

# Create required directories in the new location
mkdir -p "$GITSTAR_DATA_DIR/readmes" 2>/dev/null
mkdir -p "$GITSTAR_DATA_DIR/models" 2>/dev/null
mkdir -p "$GITSTAR_DATA_DIR/cache" 2>/dev/null

# Fetch GitHub starred repositories
function sentinel_gitstar_fetch() {
    if [ $SENTINEL_GITSTAR_ENABLED -eq 1 ]; then
        if [ -z "$1" ]; then
            echo "Usage: sentinel_gitstar_fetch <github_username>"
            return 1
        fi
        
        echo "Fetching starred repositories for user: $1"
        python3 "$SENTINEL_GITSTAR_DIR/sentinel_gitstar.py" --fetch "$1"
    else
        echo "SENTINEL GitStar disabled. Install dependencies first."
    fi
}

# Analyze all downloaded READMEs
function sentinel_gitstar_analyze() {
    if [ $SENTINEL_GITSTAR_ENABLED -eq 1 ]; then
        echo "Analyzing GitHub starred repositories..."
        python3 "$SENTINEL_GITSTAR_DIR/sentinel_gitstar.py" --analyze
    else
        echo "SENTINEL GitStar disabled. Install dependencies first."
    fi
}

# Search for repositories based on functionality
function sentinel_gitstar_search() {
    if [ $SENTINEL_GITSTAR_ENABLED -eq 1 ]; then
        if [ -z "$1" ]; then
            echo "Usage: sentinel_gitstar_search <query>"
            return 1
        fi
        
        echo "Searching for repositories matching: $1"
        python3 "$SENTINEL_GITSTAR_DIR/sentinel_gitstar.py" --search "$1"
    else
        echo "SENTINEL GitStar disabled. Install dependencies first."
    fi
}

# Get suggestions for a specific task
function sentinel_gitstar_suggest() {
    if [ $SENTINEL_GITSTAR_ENABLED -eq 1 ]; then
        if [ -z "$1" ]; then
            echo "Usage: sentinel_gitstar_suggest <task_description>"
            return 1
        fi
        
        echo "Finding repositories for task: $1"
        python3 "$SENTINEL_GITSTAR_DIR/sentinel_gitstar.py" --suggest "$1"
    else
        echo "SENTINEL GitStar disabled. Install dependencies first."
    fi
}

# Show statistics about downloaded repositories
function sentinel_gitstar_stats() {
    if [ $SENTINEL_GITSTAR_ENABLED -eq 1 ]; then
        echo "GitHub starred repository statistics:"
        python3 "$SENTINEL_GITSTAR_DIR/sentinel_gitstar.py" --stats
    else
        echo "SENTINEL GitStar disabled. Install dependencies first."
    fi
}

# Update repositories (download new READMEs)
function sentinel_gitstar_update() {
    if [ $SENTINEL_GITSTAR_ENABLED -eq 1 ]; then
        if [ -z "$1" ]; then
            echo "Usage: sentinel_gitstar_update <github_username>"
            return 1
        fi
        
        echo "Updating starred repositories for user: $1"
        python3 "$SENTINEL_GITSTAR_DIR/sentinel_gitstar.py" --update "$1"
    else
        echo "SENTINEL GitStar disabled. Install dependencies first."
    fi
}

# Install dependencies
function sentinel_gitstar_install_deps() {
    echo "Installing dependencies for SENTINEL GitStar..."
    pip install requests beautifulsoup4 tqdm numpy scipy scikit-learn npyscreen
    
    # Check if installation was successful
    if python3 -c "import requests, beautifulsoup4, tqdm, numpy, scipy, sklearn, npyscreen" &>/dev/null; then
        echo "Dependencies installed successfully."
        SENTINEL_GITSTAR_ENABLED=1
    else
        echo "Failed to install some dependencies. Please check pip output for errors."
    fi
}

# Launch TUI interface
function sentinel_gitstar_tui() {
    if [ $SENTINEL_GITSTAR_ENABLED -eq 1 ]; then
        # Check for npyscreen specifically
        if ! python3 -c "import npyscreen" &>/dev/null; then
            echo "TUI dependency 'npyscreen' not found."
            echo "Run 'sentinel_gitstar_install_deps' to install all dependencies."
            return 1
        fi
        
        echo "Launching GitHub Star Analyzer TUI..."
        python3 "$SENTINEL_GITSTAR_DIR/sentinel_gitstar_tui.py"
    else
        echo "SENTINEL GitStar disabled. Install dependencies first."
        echo "Run 'sentinel_gitstar_install_deps' to install all dependencies."
    fi
}

# Alias for easier access
alias sgfetch='sentinel_gitstar_fetch'
alias sgsearch='sentinel_gitstar_search'
alias sgsuggest='sentinel_gitstar_suggest'
alias sgstats='sentinel_gitstar_stats'
alias sgupdate='sentinel_gitstar_update'
alias sgtui='sentinel_gitstar_tui'
alias sgdeps='sentinel_gitstar_install_deps'

# Check if module can be enabled
if [ $SENTINEL_GITSTAR_ENABLED -eq 1 ]; then
    echo "SENTINEL GitStar module loaded successfully."
    if [ $SENTINEL_LLM_AVAILABLE -eq 0 ]; then
        echo "Note: Install llama-cpp-python for advanced analysis features."
    fi
else
    echo "SENTINEL GitStar module is disabled. Install required dependencies."
fi 