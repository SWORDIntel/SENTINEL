#!/bin/bash
# Aliases for work on disks and filesystems
#
# Last edit: 04/14/2025

#------------------------------------------------------------------------------
# DISK USAGE AND SPACE MANAGEMENT
#------------------------------------------------------------------------------

# Show the total size of a directory with depth control
alias dirsize="du -h -c --max-depth=1"
alias dirsize2="du -h -c --max-depth=2"
alias dirsize3="du -h -c --max-depth=3"

# Sort directories by size (largest first)
alias dirsort="du -h --max-depth=1 | sort -hr"

# Find largest files in current directory (>100MB)
alias bigfiles="find . -type f -size +100M -exec ls -lh {} \; | sort -k5 -hr"

# Find largest files recursively with size breakdown
alias findlarge="find . -type f -exec du -h {} \; | sort -hr | head -n 20"

# Show disk usage in human-readable format
alias dfh="df -h"
alias dfi="df -i"  # Show inode usage
alias dfht="df -hT" # Show filesystem types

# Show disk usage for specific filesystem types
alias dfext="df -hT | grep -E 'ext[2-4]'"
alias dfxfs="df -hT | grep 'xfs'"

# Show disk usage excluding certain filesystem types
alias dfreal="df -h -x tmpfs -x devtmpfs -x squashfs"

# Disk usage with progress bar (requires pv)
alias dfbar="df -h | grep -v tmpfs | awk 'NR>1 {print \$5}' | sed 's/%//' | (pv -l -s 100 > /dev/null) 2>&1"

#------------------------------------------------------------------------------
# FILE ACCESS AND MONITORING
#------------------------------------------------------------------------------

# Show all files in a directory being accessed and what is accessing them
alias lused="lsof +D"

# Show files opened by a specific user
alias lsofuser="lsof -u"

# Show processes accessing a specific file
alias whatsaccessing="lsof"

# Show all network file systems
alias nfsshows="showmount -e"

# Monitor file access in real-time (requires inotify-tools)
alias watchdir="inotifywait -m -r -e create,delete,modify,move ."

# Monitor disk I/O in real-time
alias iotop="sudo iotop -o"
alias iostat="iostat -xdm 2"

#------------------------------------------------------------------------------
# DISK HEALTH AND PERFORMANCE
#------------------------------------------------------------------------------

# Check disk health (requires smartmontools)
alias diskhealth="sudo smartctl -a"
alias disksmart="sudo smartctl -H"
alias disktest="sudo smartctl -t short"
alias diskstatus="sudo smartctl -c"

# Show disk I/O statistics
alias diskstat="iostat -dx 2"

# Show disk read/write speed
alias diskspeed="sudo hdparm -tT"

# Show disk information
alias diskinfo="sudo hdparm -I"

# Show partition information
alias partinfo="sudo parted -l"
alias lsblk="lsblk -o NAME,SIZE,FSTYPE,TYPE,MOUNTPOINT,UUID"

# Show RAID status
alias raidstat="cat /proc/mdstat"
alias mdstat="cat /proc/mdstat"

#------------------------------------------------------------------------------
# FILESYSTEM OPERATIONS
#------------------------------------------------------------------------------

# Mount operations
alias mnt="mount | column -t"
alias mntt="mount | grep -v tmpfs | column -t"

# Show mounted filesystems with types
alias mountinfo="mount | column -t"
alias mountpoints="findmnt"

# Remount filesystem in read-write mode
alias remountw="sudo mount -o remount,rw"
alias remountr="sudo mount -o remount,ro"

# Check filesystem for errors
alias fsck="sudo fsck -f"
alias fscke="sudo e2fsck -f"
alias fsckx="sudo xfs_repair"

# Show filesystem usage by file type
alias diskusage="find . -type f -name \"*.*\" | sed 's/.*\.//' | sort | uniq -c | sort -nr"

#------------------------------------------------------------------------------
# DISK CLEANUP
#------------------------------------------------------------------------------

# Find and remove empty directories
alias rmempty="find . -type d -empty -delete"

# Find and remove duplicate files (requires fdupes)
alias finddupes="fdupes -r"
alias rmdupes="fdupes -rdN"

# Clean journal logs
alias cleanjournals="sudo journalctl --vacuum-time=3d"

# Clean package cache (for different distros)
alias cleanpkg="sudo apt-get clean && sudo apt-get autoclean"
alias cleanyum="sudo yum clean all"
alias cleandnf="sudo dnf clean all"

# Find files not accessed in the last 30 days
alias oldfiles="find . -type f -atime +30 -ls"

#------------------------------------------------------------------------------
# BACKUP AND SYNC
#------------------------------------------------------------------------------

# Create a compressed backup of a directory
alias tardir="tar -czf"
alias untardir="tar -xzf"

# Sync directories with progress
alias rsyncp="rsync -ah --progress"
alias rsyncm="rsync -avz --progress"

# Mirror directories (exact copy)
alias mirrorcopy="rsync -avz --delete"

# Create a snapshot of a directory
alias snapshot="rsync -avz --link-dest"

#------------------------------------------------------------------------------
# ADVANCED DISK OPERATIONS
#------------------------------------------------------------------------------

# Show block devices with detailed info
alias blkdev="lsblk -o NAME,SIZE,TYPE,MOUNTPOINT,UUID,MODEL,FSTYPE,LABEL"

# Show disk sector information
alias sectors="sudo fdisk -l"

# Show disk UUID
alias diskid="sudo blkid"

# Show disk vendor information
alias diskvendor="sudo lshw -class disk"

# Show disk temperature (requires hddtemp)
alias disktemp="sudo hddtemp /dev/sd?"

# Show SMART attributes in a readable format
alias smartattr="sudo smartctl -A"

# Show disk serial number
alias diskserial="sudo hdparm -I | grep -i serial"

#------------------------------------------------------------------------------
# PERFORMANCE MONITORING
#------------------------------------------------------------------------------

# Monitor disk I/O by process
alias iotopproc="sudo iotop -o -P"

# Show disk latency
alias disklatency="sudo iostat -dx 1"

# Show disk throughput
alias diskthroughput="sudo iostat -m 1"

# Show disk queue length
alias diskqueue="vmstat 1"

# Show disk I/O wait time
alias diskwait="vmstat -w 1"

# Show disk I/O by filesystem
alias iobyfs="iostat -x -p ALL 2"

#------------------------------------------------------------------------------
# UTILITY FUNCTIONS
#------------------------------------------------------------------------------

# Function to find the largest directories
findbigdirs() {
    local depth=${1:-1}
    du -h --max-depth="$depth" | sort -hr | head -n 20
}

# Function to analyze disk usage by file type
diskusageby() {
    find . -type f -name "*.$1" -exec du -ch {} \; | grep total$
}

# Function to check if a path is on SSD or HDD
isssd() {
    local device=$(df -P "$1" | awk 'NR==2 {print $1}')
    local rotational=$(cat /sys/block/${device/\/dev\//}/queue/rotational)
    if [ "$rotational" -eq 0 ]; then
        echo "$1 is on an SSD"
    else
        echo "$1 is on an HDD"
    fi
}

# Function to get detailed information about a specific disk
diskdetails() {
    echo "=== Disk Information for $1 ==="
    echo "--- Basic Info ---"
    sudo fdisk -l "$1"
    echo "--- SMART Status ---"
    sudo smartctl -H "$1"
    echo "--- Performance ---"
    sudo hdparm -tT "$1"
    echo "--- Detailed Info ---"
    sudo hdparm -I "$1"
}

# Function to monitor disk I/O for a specific process
watchdiskio() {
    local pid=$1
    while true; do
        clear
        echo "Disk I/O for process $pid ($(ps -p $pid -o comm=))"
        sudo iotop -p $pid -o -b -n 1
        sleep 2
    done
}

# Function to create a timestamped backup of a file or directory
backupitem() {
    local timestamp=$(date +%Y%m%d-%H%M%S)
    if [ -d "$1" ]; then
        tar -czf "${1%/}-$timestamp.tar.gz" "$1"
        echo "Directory backup created: ${1%/}-$timestamp.tar.gz"
    elif [ -f "$1" ]; then
        cp "$1" "${1}-$timestamp"
        echo "File backup created: ${1}-$timestamp"
    else
        echo "Error: $1 is not a valid file or directory"
    fi
}

# Function to show disk usage over time (requires gnuplot)
disktrend() {
    local device=${1:-"/"}
    local interval=${2:-60}
    local count=${3:-60}
    
    echo "Monitoring disk usage for $device every $interval seconds, $count times"
    echo "Time,Usage" > disk_usage.csv
    
    for ((i=1; i<=count; i++)); do
        usage=$(df -h "$device" | awk 'NR==2 {print $5}' | sed 's/%//')
        timestamp=$(date +%H:%M:%S)
        echo "$timestamp,$usage" >> disk_usage.csv
        echo -ne "Sample $i/$count: $usage% used at $timestamp\r"
        sleep $interval
    done
    
    echo -e "\nGenerating graph..."
    gnuplot <<EOF
    set terminal png
    set output "disk_usage.png"
    set title "Disk Usage Trend for $device"
    set xlabel "Time"
    set ylabel "Usage (%)"
    set grid
    set datafile separator ","
    plot "disk_usage.csv" using 0:2 with lines title "Disk Usage"
EOF
    
    echo "Graph saved as disk_usage.png"
}
