#!/usr/bin/env bash
# SENTINEL Advanced Autocomplete Framework
# Version: 2.0.0
# 
# This file loads the modular autocomplete framework components
# from bash_modules.d/suggestions/

# Legacy support - ensure not breaking existing scripts
# that might be calling functions directly from this file
if [[ "$1" == "--legacy-mode" ]]; then
    echo "Warning: Running autocomplete in legacy compatibility mode"
    echo "This mode is deprecated and will be removed in a future version"
    source ~/.sentinel/legacy/autocomplete
    return 0
fi

# Base directory where all modules are stored
MODULES_DIR="$(realpath "$(dirname "${BASH_SOURCE[0]}")/../bash_modules.d/suggestions")"

# Check if modules directory exists
if [[ ! -d "$MODULES_DIR" ]]; then
    echo "Error: Modules directory not found: $MODULES_DIR"
    echo "SENTINEL autocomplete system cannot be initialized"
    return 1
fi

# Main autocomplete module that will load all sub-modules
MAIN_MODULE="$MODULES_DIR/autocomplete.module"

# Check if main module exists
if [[ -f "$MAIN_MODULE" ]]; then
    # Source the main module that will handle loading all sub-modules
    source "$MAIN_MODULE"
else
    echo "Error: Main autocomplete module not found: $MAIN_MODULE"
    echo "SENTINEL autocomplete system cannot be initialized"
    
    # Check if we have a backup we can use
    if [[ -f ~/.sentinel/backup/autocomplete ]]; then
        echo "Loading backup autocomplete file..."
        source ~/.sentinel/backup/autocomplete
    else
        # Try to create a backup of the current file for future use
        mkdir -p ~/.sentinel/backup
        if [[ -f "$(dirname "${BASH_SOURCE[0]}")/autocomplete" ]]; then
            cp "$(dirname "${BASH_SOURCE[0]}")/autocomplete" ~/.sentinel/backup/
            echo "Created backup of current autocomplete file for future use"
        fi
        return 1
    fi
fi 