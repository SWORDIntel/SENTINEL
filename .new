*) -> ;;
;; -> *)
# 1) Most common: follows the file and survives log rotation -> tail -F /tmp/iowa_discovery.log
add2path -> sudo snap install gitkraken --classic
# Add an "alert" alias for long running commands -> alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"' -> # enable programmable completion features
alias @autocomplete="source ~/.bash_modules.d/autocomplete.module" -> EOF
alias egrep='egrep --color=auto' -> fi
alias fgrep='fgrep --color=auto' -> alias egrep='egrep --color=auto'
alias grep='grep --color=auto' -> alias fgrep='fgrep --color=auto'
alias la='ls -A' -> alias l='ls -CF'
alias ll='ls -alF' -> alias la='ls -A'
alias l='ls -CF' -> # Add an "alert" alias for long running commands
alias l='ls -CF' -> # Define color variables
alias ls='ls --color=auto' -> alias grep='grep --color=auto'
# append to the history file, don't overwrite it -> shopt -s histappend
# a) The tidy ‘-r’ flag (works if you used add-apt-repository originally) -> sudo add-apt-repository --remove ppa:x2go/stable
./audio -> ./audio_repair.py
./audio_repair.py -> ssh root@192.168.1.45
bash install.sh -> ls -la /home/john/bash_modules.d/
bash install.sh -> ./uninstall.sh
bash -l -c 'declare -F | grep -E "sentinel|_sentinel"' -> bash -l -c 'env | grep SENTINEL'
bash -l -c 'echo "Bash login test successful"' -> cp ~/.bashrc /home/john/Documents/GitHub/SENTINEL/bashrc.working
bash -l -c 'echo "Testing module loading..."' -> bash -l -c 'if [[ -n "$_SENTINEL_CONFIG_CACHE_LOADED" && -n "$_SENTINEL_LOGGING_LOADED" && -n "$_SENTINEL_MODULE_MANAGER_LOADED" ]]; then echo "All three modules successfully loaded!"; else echo "Some modules failed to load. Status:"; echo "config_cache: ${_SENTINEL_CONFIG_CACHE_LOADED:-not loaded}"; echo "logging: ${_SENTINEL_LOGGING_LOADED:-not loaded}"; echo "module_manager: ${_SENTINEL_MODULE_MANAGER_LOADED:-not loaded}"; fi'
bash -l -c 'env | grep SENTINEL' -> /bin/python /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/printEnvVariablesToFile.py /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/deactivate/bash/envVars.txt
bash -l -c 'if [[ -n "$_SENTINEL_CONFIG_CACHE_LOADED" && -n "$_SENTINEL_LOGGING_LOADED" && -n "$_SENTINEL_MODULE_MANAGER_LOADED" ]]; then echo "All three modules successfully loaded!"; else echo "Some modules failed to load. Status:"; echo "config_cache: ${_SENTINEL_CONFIG_CACHE_LOADED:-not loaded}"; echo "logging: ${_SENTINEL_LOGGING_LOADED:-not loaded}"; echo "module_manager: ${_SENTINEL_MODULE_MANAGER_LOADED:-not loaded}"; fi' -> mkdir -p ~/.bash_modules.d ~/bash_modules.d ~/.sentinel/cache/config ~/.sentinel/cache/modules ~/.sentinel/logs
} -> # Basic function to check network connections
/bin/python /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/printEnvVariablesToFile.py /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/deactivate/bash/envVars.txt -> ./directeye_tui.sh
/bin/python /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/printEnvVariablesToFile.py /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/deactivate/bash/envVars.txt -> # List any active X2Go sessions (root privileges required)
/bin/python /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/printEnvVariablesToFile.py /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/deactivate/bash/envVars.txt -> mkdir -p /home/john/Documents/GitHub/ARTICBASTION/Midway/BASTION/ui/remote_dash_connector
/bin/python /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/printEnvVariablesToFile.py /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/deactivate/bash/envVars.txt -> mkdir -p /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/module_generator
/bin/python /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/printEnvVariablesToFile.py /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/deactivate/bash/envVars.txt -> mkvenv
/bin/python /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/printEnvVariablesToFile.py /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/deactivate/bash/envVars.txt -> python3 /home/john/Documents/GitHub/SWORDTools/Libraries/TUI/tests/test_runner.py --verbose
/bin/python /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/printEnvVariablesToFile.py /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/deactivate/bash/envVars.txt -> python3 -m venv venv
/bin/python /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/printEnvVariablesToFile.py /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/deactivate/bash/envVars.txt -> python -m us_lookup.core.tools.texas_socrata.analyzer --discover
# b) Manual: delete the list file then refresh indexes -> sudo rm -f /etc/apt/sources.list.d/x2go*.list
cat > ~/.bashrc.minimal << 'EOF' -> #!/usr/bin/env bash
cat /home/john/.bash_modules -> ls -la /home/john/bashrc.postcustom
cat /home/john/logs/install.log | tail -n 50 -> bash install.sh
cat /home/john/logs/verification.log -> ls -la /home/john/logs/
cat tmp/iowa_deprecated_endpoints.json -> # 1) Most common: follows the file and survives log rotation
cd /home/john/Documents/GitHub/ARTICBASTION/Midway/BASTION/ui/remote_dash_connector -> pip install -r requirements.txt
cd /home/john/Documents/GitHub/ARTICBASTION/Midway && pytest -xvs tests/test_remote_node_installer.py::TestRemoteNodeInstaller::test_init -> /bin/python /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/printEnvVariablesToFile.py /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/deactivate/bash/envVars.txt
cd /home/john/Documents/GitHub/ARTICBASTION/Midway -> python -m tests.unit.distributed_cert_management.run_tests
cd /home/john/Documents/GitHub/ARTICBASTION -> mkdir -p /home/john/Documents/GitHub/ARTICBASTION/Midway/BASTION/tests
cd /home/john/Documents/GitHub/ARTICBASTION -> mkdir -p /home/john/Documents/GitHub/ARTICBASTION/Midway/monitoring_integration
cd /home/john/Documents/GitHub/ARTICBASTION -> pip install -r requirements.txt
cd /home/john/Documents/GitHub/ARTICBASTION -> python Midway/BASTION/ui/migration_tools/detect_deprecated_imports.py
cd /home/john/Documents/GitHub/ARTICBASTION -> sudo apt-get install portaudio19-dev
cd /home/john/Documents/GitHub/DIRECTEYE && python -m us_lookup.core.tools.iowa_socrata.analyzer --discover --output test_output.json --script test_update_script.py -> python /tmp/test_socrata_endpoint.py
cd /home/john/Documents/GitHub/SWORDTools/Libraries -> mkdir -p SubdomainEnumeration/discovery SubdomainEnumeration/analysis SubdomainEnumeration/utils
cd /home/john/Documents/GitHub/SWORDTools && python -m unittest Libraries/TUI/tests/unit/test_plugin_system.py -> /bin/python /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/printEnvVariablesToFile.py /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/deactivate/bash/envVars.txt
cd /home/john -> ls -la ~/.bashrc
# check the window size after each command and, if necessary, -> # update the values of LINES and COLUMNS.
chmod +x ~/fix_blesh.sh && ~/fix_blesh.sh -> ./uninstall.sh
chmod +x /home/john/Documents/GitHub/SENTINEL/test_bash_modules.sh -> ./test_bash_modules.sh
chmod +x /home/john/sentinel_restore.sh -> /home/john/sentinel_restore.sh
# colored GCC warnings and errors -> export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'
cp ~/.bashrc ~/.bashrc.backup-$(date +%Y%m%d-%H%M%S) -> bash -l -c 'echo "Bash login test successful"'
cp ~/.bashrc ~/.bashrc.before_simplify -> cp ~/.bashrc ~/.bashrc.with_functions
cp ~/.bashrc ~/.bashrc.with_functions -> cat > ~/.bashrc.minimal << 'EOF'
cp ~/.bashrc /home/john/Documents/GitHub/SENTINEL/bashrc.working -> bash -l -c 'echo "Testing module loading..."'
cp ~/.bashrc.minimal ~/.bashrc -> ls -la ~/.bash* 2>/dev/null || echo "No matching files found"
cp ~/.bashrc.simple ~/.bashrc -> cp /home/john/Documents/GitHub/SENTINEL/bashrc /home/john/Documents/GitHub/SENTINEL/bashrc.backup.$(date +%s)
cp /home/john/Documents/GitHub/SENTINEL/bashrc /home/john/Documents/GitHub/SENTINEL/bashrc.backup.$(date +%s) -> chmod +x /home/john/sentinel_restore.sh
debian_chroot=$(cat /etc/debian_chroot) -> fi
# Define color variables -> LIGHTGREEN='\033[1;32m'
diff -q /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/cli.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_db_cli.py -> ls -la /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/
diff -q /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/core.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database.py -> diff -q /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/cli.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_db_cli.py
diff -q /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/fts.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database_fts.py -> diff -q /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/incremental.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database_incremental.py
diff -q /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/incremental.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database_incremental.py -> diff -q /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/core.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database.py
diff -u /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database_fts.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/fts.py | head -30 -> ls -l /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database*.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_db_cli.py
diff -u /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/core.py | head -50 -> diff -u /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/fts.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database_fts.py
diff -u /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/fts.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database_fts.py -> diff -u /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/core.py | head -50
diff -u /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/fts.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database_fts.py -> grep -r "Libraries.Chains.Generator.cve_database" --include="*.py" /home/john/Documents/GitHub/SWORDTools/Libraries/
diff -u /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_db_integration.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/integration.py | head -50 -> grep -r "Libraries.Chains.Generator.cve_db_integration" --include="*.py" /home/john/Documents/GitHub/SWORDTools/
./directeye_tui.sh -> pkill -f "python /tmp/iowa_endpoint_discovery"
# don't put duplicate lines or lines starting with space in the history. -> HISTCONTROL=ignoreboth
dpkg -l | grep -i x2go || echo "✔️ No X2Go packages installed" -> # Nothing should print from grep; the ✅ tells you the purge succeeded.
echo "Configuration changes applied. Please restart your terminal or run 'source ~/.bashrc' to activate the changes." -> grep -r "overhead" --include="*.sh" --include="*.module" /home/john/bash_modules.d/ /home/john/.bash* 2>/dev/null || echo "No matches found"
echo -e "${LIGHTGREEN}Current network connections:${NC}" -> lsof -i -P -n | grep -E "(LISTEN|ESTABLISHED)" 2>/dev/null || echo "No connections found"
# Either way is fine – pick one -> # a) The tidy ‘-r’ flag (works if you used add-apt-repository originally)
else -> PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
EOF -> cp ~/.bashrc.minimal ~/.bashrc
EOF -> cp ~/.bashrc.simple ~/.bashrc
;; -> esac
esac -> # don't put duplicate lines or lines starting with space in the history.
esac -> # enable color support of ls and also add handy aliases
# Exact package names can vary; the wildcards catch add-ons such as x2goagent -> sudo apt-get update
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01' -> # some more ls aliases
fi -> # colored GCC warnings and errors
find /home/john -name "bashrc.postcustom" -> chmod +x /home/john/Documents/GitHub/SENTINEL/test_bash_modules.sh
fi -> return 0
fi -> # SENTINEL autocomplete alias
fi -> # SENTINEL integration - safely load postcustom file
fi -> # set a fancy prompt (non-color, unless we know we "want" color)
fi -> unset color_prompt force_color_prompt
# for setting history length see HISTSIZE and HISTFILESIZE in bash(1) -> HISTSIZE=1000
grep -A5 -B5 "attach=overhead" /home/john/bash_modules.d/autocomplete.module -> grep -r "attach=overhead" --include="*" /home/john/Documents/GitHub/SENTINEL/ 2>/dev/null || echo "No matches found in SENTINEL repo"
grep -r "attach=overhead" --include="*" /home/john/Documents/GitHub/SENTINEL/ 2>/dev/null || echo "No matches found in SENTINEL repo" -> chmod +x ~/fix_blesh.sh && ~/fix_blesh.sh
grep -r "cve_database_" --include="*.py" /home/john/Documents/GitHub/SWORDTools/Libraries/ | grep -v "/home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database_" -> rm /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database_fts.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database_incremental.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_db_cli.py
grep -r "Libraries.Chains.Generator.cve_database_fts" --include="*.py" /home/john/Documents/GitHub/SWORDTools/ -> grep -r "Libraries.Chains.Generator.cve_database_incremental" --include="*.py" /home/john/Documents/GitHub/SWORDTools/
grep -r "Libraries.Chains.Generator.cve_database" --include="*.py" /home/john/Documents/GitHub/SWORDTools/ -> grep -r "Libraries.Chains.Generator.cve_database_fts" --include="*.py" /home/john/Documents/GitHub/SWORDTools/
grep -r "Libraries.Chains.Generator.cve_database" --include="*.py" /home/john/Documents/GitHub/SWORDTools/Libraries/ -> grep -r "Libraries.Chains.Generator.cve_db_cli" --include="*.py" /home/john/Documents/GitHub/SWORDTools/Libraries/
grep -r "Libraries.Chains.Generator.cve_database_incremental" --include="*.py" /home/john/Documents/GitHub/SWORDTools/ -> grep -r "Libraries.Chains.Generator.cve_db_cli" --include="*.py" /home/john/Documents/GitHub/SWORDTools/
grep -r "Libraries.Chains.Generator.cve_db_cli" --include="*.py" /home/john/Documents/GitHub/SWORDTools/ -> grep -r "Libraries.Chains.Generator.cve_db_integration" --include="*.py" /home/john/Documents/GitHub/SWORDTools/
grep -r "Libraries.Chains.Generator.cve_db_cli" --include="*.py" /home/john/Documents/GitHub/SWORDTools/Libraries/ -> grep -r "cve_database_" --include="*.py" /home/john/Documents/GitHub/SWORDTools/Libraries/ | grep -v "/home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database_"
grep -r "Libraries.Chains.Generator.cve_db_integration" --include="*.py" /home/john/Documents/GitHub/SWORDTools/ -> grep -r "cve_database.py\|cve_database_fts.py\|cve_database_incremental.py\|cve_db_cli.py\|cve_db_integration.py" --include="*.md" /home/john/Documents/GitHub/SWORDTools/
grep -r "Libraries.Chains.Generator.cve_db_integration" --include="*.py" /home/john/Documents/GitHub/SWORDTools/ -> rm /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_db_integration.py
grep -r "overhead" --include="*.sh" --include="*.module" /home/john/bash_modules.d/ /home/john/.bash* 2>/dev/null || echo "No matches found" -> grep -A5 -B5 "attach=overhead" /home/john/bash_modules.d/autocomplete.module
HISTCONTROL=ignoreboth -> # append to the history file, don't overwrite it
HISTFILESIZE=2000 -> # check the window size after each command and, if necessary,
HISTSIZE=1000 -> HISTFILESIZE=2000
/home/john/sentinel_restore.sh -> cp ~/.bashrc ~/.bashrc.before_simplify
# If anything is reported, warn users and let them disconnect cleanly. -> # You can also force-terminate specific sessions (last column = session ID):
# -> # If not running interactively, don't do anything
./im -> ./install.sh
./install.sh -> /bin/python /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/printEnvVariablesToFile.py /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/deactivate/bash/envVars.txt
./install.sh -> ./uninstall.sh
iptables -F -> add2path
iptables -L -n -> # Temporarily disable firewall to test (if present)
*i*) ;; -> *) return;;
LIGHTGREEN='\033[1;32m' -> NC='\033[0m' # No Color
# List any active X2Go sessions (root privileges required) -> sudo x2golistsessions_root
================= -> log() { local level="$1"; shift; local message="$*"; local timestamp=$(date '+%Y-%m-%d %H:%M:%S'); echo "[$timestamp] [$level] $message" | tee -a "$INSTALL_LOG"; case "$level" in ERROR) echo -e "${RED}[ERROR]${NC} $message" >&2
log() { local level="$1"; shift; local message="$*"; local timestamp=$(date '+%Y-%m-%d %H:%M:%S'); echo "[$timestamp] [$level] $message" | tee -a "$INSTALL_LOG"; case "$level" in ERROR) echo -e "${RED}[ERROR]${NC} $message" >&2 -> ssh root@192.168.1.45
ls -la ~/.bash* 2>/dev/null || echo "No matching files found" -> echo "Configuration changes applied. Please restart your terminal or run 'source ~/.bashrc' to activate the changes."
ls -la ~/.bashrc -> cp ~/.bashrc ~/.bashrc.backup-$(date +%Y%m%d-%H%M%S)
ls -la /home/john/bash_modules.d/ -> bash install.sh
ls -la /home/john/bash_modules.d -> ls -la /home/john/bashrc.postcustom
ls -la /home/john/bashrc.postcustom -> find /home/john -name "bashrc.postcustom"
ls -la /home/john/bashrc.postcustom -> ls -la /home/john/bash_modules.d
ls -la /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/ -> diff -u /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database_fts.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/fts.py | head -30
ls -la /home/john/logs/ -> cat /home/john/.bash_modules
ls -l /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database*.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_db_cli.py -> ls -l /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/fts.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/core.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/cli.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/incremental.py
ls -l /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/fts.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/core.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/cli.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/incremental.py -> diff -u /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/fts.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database_fts.py
lsof -i -P -n | grep -E "(LISTEN|ESTABLISHED)" 2>/dev/null || echo "No connections found" -> }
# make less more friendly for non-text input files, see lesspipe(1) -> set +o ignoreeof
# make less more friendly for non-text input files, see lesspipe(1) -> test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
# make less more friendly for non-text input files, see lesspipe(1) -> [ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"
# match all files and zero or more directories and subdirectories. -> #shopt -s globstar
mkdir -p bak -> mv *.bak bak/
mkdir -p ~/.bash_modules.d ~/bash_modules.d ~/.sentinel/cache/config ~/.sentinel/cache/modules ~/.sentinel/logs -> bash -l -c 'declare -F | grep -E "sentinel|_sentinel"'
mkdir -p /home/john/Documents/GitHub/ARTICBASTION/Midway/BASTION/tests -> pip install -r requirements.txt
mkdir -p /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/module_generator -> rm /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/module_generator.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/improved_module_generator.py
mkdir -p /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/module_templates/exploit_modules -> rm /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/module_templates/generic_exploit_template.py
mkdir -p SubdomainEnumeration/discovery SubdomainEnumeration/analysis SubdomainEnumeration/utils -> /bin/python /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/printEnvVariablesToFile.py /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/deactivate/bash/envVars.txt
mkenv -> mkvenv
mkvenv -> mkenv
mkvenv -> python3 -m venv .venv
module_list -> mkenv
module_list -> safe_load_direct_module fzf
module_list -> set +o ignoreeof
mv *.bak bak/ -> sudo mv *.bak bak/
NC='\033[0m' # No Color -> # Basic secure_source function without complex dependencies
# Nothing should print from grep; the ✅ tells you the purge succeeded. -> sudo apt install distcc
# On LONENOMAD - check firewall status -> iptables -L -n
openssl version -> /bin/python /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/printEnvVariablesToFile.py /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/deactivate/bash/envVars.txt
pip install pycryptodome -> # match all files and zero or more directories and subdirectories.
pip install -r requirements.txt -> openssl version
pip install -r requirements.txt -> pip install -r requirements.txt --upgrade
pip install -r requirements.txt --upgrade -> pip install sqlalchemy
pip install -r requirements.txt --upgrade -> y
pkill -f "python /tmp/iowa_endpoint_discovery" -> /bin/python /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/printEnvVariablesToFile.py /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/deactivate/bash/envVars.txt
pkill -f "python /tmp/iowa_endpoint_discovery" -> python /tmp/iowa_endpoint_discovery_with_wireguard.py
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ ' -> else
PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ ' -> fi
PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1" -> ;;
python3 /home/john/Documents/GitHub/SWORDTools/Libraries/TUI/tests/test_runner.py --type e2e --verbose -> python3 /home/john/Documents/GitHub/SWORDTools/Libraries/TUI/tests/test_runner.py --type unit --verbose
python3 /home/john/Documents/GitHub/SWORDTools/Libraries/TUI/tests/test_runner.py --type integration --verbose -> python3 /home/john/Documents/GitHub/SWORDTools/Libraries/TUI/tests/test_runner.py --type e2e --verbose
python3 /home/john/Documents/GitHub/SWORDTools/Libraries/TUI/tests/test_runner.py --type unit --verbose -> python3 /home/john/Documents/GitHub/SWORDTools/Libraries/TUI/tests/test_runner.py --type integration --verbose
python3 /home/john/Documents/GitHub/SWORDTools/Libraries/TUI/tests/test_runner.py --verbose -> python3 /home/john/Documents/GitHub/SWORDTools/Libraries/TUI/tests/test_runner.py --type unit --verbose
python3 -m venv .venv -> pip install -r requirements.txt
python Midway/BASTION/ui/migration_tools/detect_deprecated_imports.py -> # Test just the JWT components
python -m tests.unit.distributed_cert_management.run_tests --component jwt -> # Test with coverage report
python -m tests.unit.distributed_cert_management.run_tests --coverage -> pip install pytest
python -m tests.unit.distributed_cert_management.run_tests -> python3 -m venv keyplug_venv
python -m us_lookup.core.tools.texas_socrata.analyzer --discover -> ./directeye_tui.sh
python /tmp/iowa_endpoint_discovery.py -> python /tmp/iowa_endpoint_discovery_with_wireguard.py
python /tmp/iowa_endpoint_discovery_with_wireguard.py -> ./directeye_tui.sh
python /tmp/iowa_endpoint_discovery_with_wireguard.py -> pkill -f "python /tmp/iowa_endpoint_discovery"
python /tmp/test_multiple_endpoints.py -> python /tmp/iowa_endpoint_discovery.py
python /tmp/test_socrata_endpoint.py -> python /tmp/test_multiple_endpoints.py
# Remove orphaned dependencies -> sudo apt-get --yes autoremove --purge
return 0 -> }
*) return;; -> esac
rm -f ~/.Xauthority ~/.xsession-x2go* -> rm -rf ~/.cache/{sessions,fontconfig}
rm /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database_fts.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database_incremental.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_db_cli.py -> diff -u /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_db_integration.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/integration.py | head -50
rm /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_db_integration.py -> grep -r "Libraries.Chains.Generator.cve_database" --include="*.py" /home/john/Documents/GitHub/SWORDTools/
rm /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/module_generator.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/improved_module_generator.py -> mkdir -p /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/module_templates/exploit_modules
rm /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/module_templates/generic_exploit_template.py -> diff -q /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/CVEDB/fts.py /home/john/Documents/GitHub/SWORDTools/Libraries/Chains/Generator/cve_database_fts.py
rm -rf ~/.cache/{sessions,fontconfig} -> sudo rm -rf /tmp/.X11-unix /tmp/.ICE-unix
rm -rf ~/.x2go -> rm -f ~/.Xauthority ~/.xsession-x2go*
# Run once per user account that ever launched X2Go -> rm -rf ~/.x2go
safe_load_direct_module fzf -> module_list
# SENTINEL autocomplete alias -> alias @autocomplete="source ~/.bash_modules.d/autocomplete.module"
~/sentinel_complete_cleanup.sh -> ./uninstall.sh
} -> # SENTINEL integration - safely load postcustom file
set +o ignoreeof -> set -o interactive-comments
set -o interactive-comments -> set +o keyword
set +o keyword -> set -o monitor
set -o monitor -> set +o noclobber
set +o noclobber -> set +o noexec
set +o noexec -> set +o noglob
set +o noglob -> set +o nolog
set +o nolog -> set +o notify
set +o notify -> set +o nounset
set +o nounset -> set +o onecmd
set +o onecmd -> set +o physical
set +o physical -> set +o pipefail
set +o pipefail -> set +o posix
set +o posix -> set +o privileged
set +o privileged -> set +o verbose
set +o verbose -> set +o vi
set +o vi -> set +o xtrace
set +o xtrace -> mkdir -p bak
set +o xtrace -> mkenv
set +o xtrace -> test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
shopt -s checkwinsize -> # make less more friendly for non-text input files, see lesspipe(1)
#shopt -s globstar -> # make less more friendly for non-text input files, see lesspipe(1)
shopt -s histappend -> # for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
# -> # Simple .bashrc file that safely loads SENTINEL components without crashing
# Simple .bashrc file that safely loads SENTINEL components without crashing -> #
# some more ls aliases -> alias ll='ls -alF'
ssh root@192.168.1.40 -> ./audio
ssh root@192.168.1.45 -> ./install.sh
ssh root@192.168.1.45 -> ssh root@192.168.1.40
ssh root@leantwin.org -> # On LONENOMAD - check firewall status
ssh root@leantwin.org -> su
su -> =================
su -> /bin/python /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/printEnvVariablesToFile.py /home/john/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/deactivate/bash/envVars.txt
sudo add-apt-repository --remove ppa:x2go/stable -> # b) Manual: delete the list file then refresh indexes
sudo apt-get install portaudio19-dev -> pip install -r requirements.txt
sudo apt-get update -> dpkg -l | grep -i x2go || echo "✔️ No X2Go packages installed"
sudo apt-get update -> sudo apt-get --yes purge 'x2goserver*' 'x2godesktopsharing*' 'x2goagent*' 'x2goclient*'
sudo apt-get --yes autoremove --purge -> # Run once per user account that ever launched X2Go
sudo apt-get --yes purge 'x2goserver*' 'x2godesktopsharing*' 'x2goagent*' 'x2goclient*' -> # Remove orphaned dependencies
sudo apt install distcc hashcat -> module_list
sudo apt install distcc -> sudo apt install distcc hashcat
sudo rm -f /etc/apt/sources.list.d/x2go*.list -> sudo apt-get update
sudo rm -rf /tmp/.X11-unix /tmp/.ICE-unix -> # Either way is fine – pick one
sudo snap install gitkraken --classic -> ssh root@leantwin.org
sudo systemctl disable x2goserver.service x2goserver-xsession.service -> # Exact package names can vary; the wildcards catch add-ons such as x2goagent
sudo systemctl stop x2goserver.service x2goserver-xsession.service -> sudo systemctl disable x2goserver.service x2goserver-xsession.service
sudo x2golistsessions_root -> # If anything is reported, warn users and let them disconnect cleanly.
# sudo x2goserver-te -> sudo systemctl stop x2goserver.service x2goserver-xsession.service
tail -F /tmp/iowa_discovery.log -> ./directeye_tui.sh
# Temporarily disable firewall to test (if present) -> iptables -F
./test_bash_modules.sh -> ./install.sh
# Test just the JWT components -> python -m tests.unit.distributed_cert_management.run_tests --component jwt
test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)" -> alias ls='ls --color=auto'
# Test with coverage report -> python -m tests.unit.distributed_cert_management.run_tests --coverage
./uninstall.sh -> bash install.sh
./uninstall.sh -> cat /home/john/logs/install.log | tail -n 50
./uninstall.sh -> cat /home/john/logs/verification.log
./uninstall.sh -> ./im
./uninstall.sh -> ./install.sh
./uninstall.sh -> ~/sentinel_complete_cleanup.sh
./uninstall.sh -> ssh root@leantwin.org
./uninstall.sh -> y
./uninstall.sh -> yy
unset color_prompt force_color_prompt -> # If this is an xterm set the title to user@host:dir
# update the values of LINES and COLUMNS. -> shopt -s checkwinsize
#!/usr/bin/env bash -> #
xterm-color|*-256color) color_prompt=yes;; -> esac
xterm*|rxvt*) -> PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)" -> # set variable identifying the chroot you work in (used in the prompt below)
y -> ./install.sh
# You can also force-terminate specific sessions (last column = session ID): -> # sudo x2goserver-te
yy -> ./install.sh
